#include <iostream>
#include <vector>

void swap_el(std::vector<int>& arr, int i, int j)
{
    int temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
}

int pivot(std::vector<int> & arr, int l, int r)
{
    int p = arr[l];
    int i = l;
    int j = r + 1;
    while (1)
    {
        while (arr[++i] < p)
        {
            if (i == r) break;
        }
        while (arr[--j] > p)
        {
            if (j == l)break;
        }
        if (i >= j) break;
        swap_el(arr, i, j);
    }
    swap_el(arr, l, j);
    
    return j;
}
void quickSort(std::vector<int>& arr, int l, int r)
{
    if (l < r)
    {
        int j = pivot(arr, l, r);
        quickSort(arr, l, j - 1);
        quickSort(arr, j + 1, r);
    }
}
void print (const std::vector<int>  arr)
{
    for (auto i : arr)
    {
        std::cout << i << " ";
    }
    std::cout << "\n";
}
int main()
{
    std::vector<int> v = { 7, 5, 16, 8, 20, 6, 1 };
    print(v);
    quickSort(v, 0, v.size()-1);
    print(v);

}
