// Compiled with: g++ -Wall -std=c++14 -pthread

#include <iostream>

using namespace std;

/*Նկարագրել ֆունկցիա, որը հղումով ստանում է օրը, ամիսը, տարին և նույն պարամետրերի միջոցով վերադարձնում է
 գ) դրան նախորդող k օր առաջ ամսաթիվը (k-ն փոխանցվում է ֆունկցիային պարամետրի միջոցով): 
*/

int days_in_m[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
struct date
{
	int day;
	int month;
	int year;
    
	date(int d, int m, int y) :day(d), month(m), year(y)
	{}
    
    void change_year(int newyear)
    {
        year = newyear;
        if (year % 4 == 0) days_in_m[1] = 29;
	    else days_in_m[1] = 28;
    }
};
void next_day(struct date& temp)
{
	temp.day++;
	temp.change_year(temp.year);
	if (temp.day > days_in_m[temp.month-1])
	{
		temp.day = 1;
		temp.month++;
		if (temp.month-1 > 11)
		{
			temp.month = 1;
            temp.change_year(temp.year+1);
		}
	}

}

void plus_k_days(struct date& temp, int k)
{
	temp.day+=k;
    temp.change_year(temp.year);

	while (temp.day > days_in_m[temp.month - 1])
		{

			temp.day = temp.day - days_in_m[temp.month - 1];
			temp.month++;
			if (temp.month - 1 > 11)
			{
				temp.month = 1;
				temp.change_year(temp.year +1);
			}
		}

}
void minus_k_days(struct date& temp, int k)
{
	temp.day = temp.day - k ;

	temp.change_year(temp.year);

	while (temp.day < 1)
	{
        if (temp.month < 2)
        {
            temp.change_year(temp.year -1);
            temp.month = 12;
            temp.day = days_in_m[temp.month-1] + temp.day;
            continue;            
        }
	    temp.day = days_in_m[temp.month - 2] + temp.day ;
		temp.month--;
		if (temp.month - 1 < 0)
		{
			temp.month = 12;
			temp.change_year(temp.year -1);
		}
	}

}
void print(const struct date temp)
{
	std::cout << temp.day << "/" << temp.month << "/" << temp.year << "\n";
}

int main()
{
	
	/*next_day(date_1);
	print(date_1);

	plus_k_days(date_1,49);
	print(date_1);
	*/
    struct date date_1(14,2,2022);
    minus_k_days(date_1, 55);
	print(date_1);

	return 0;
}

